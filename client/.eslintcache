[{"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\store.js":"1","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\types.js":"2","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Dashboard.jsx":"3","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Experience.jsx":"4","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\EducationCredentials.jsx":"5","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\sagas\\sagas.js":"6","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\dashboard.js":"7","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Education.jsx":"8","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\alert.js":"9","C:\\Users\\User\\Desktop\\social-app\\client\\src\\index.js":"10","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\auth\\Register.jsx":"11","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\rootReducers.js":"12","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\dashboard.js":"13","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profile.js":"14","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Alert.jsx":"15","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Utils\\FormatDate.js":"16","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\education.js":"17","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\experience.js":"18","C:\\Users\\User\\Desktop\\social-app\\client\\src\\App.js":"19","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\CreateProfile.jsx":"20","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\ExperienceCredentials.jsx":"21","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\auth.js":"22","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Header.jsx":"23","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\UpdateProfile.jsx":"24","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\profile.js":"25","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Profiles.jsx":"26"},{"size":529,"mtime":1608132254897,"results":"27","hashOfConfig":"28"},{"size":2605,"mtime":1609063733514,"results":"29","hashOfConfig":"28"},{"size":6130,"mtime":1609061364765,"results":"30","hashOfConfig":"28"},{"size":5511,"mtime":1608719553925,"results":"31","hashOfConfig":"28"},{"size":1368,"mtime":1608643942155,"results":"32","hashOfConfig":"28"},{"size":13244,"mtime":1609064200966,"results":"33","hashOfConfig":"28"},{"size":1958,"mtime":1608719642686,"results":"34","hashOfConfig":"28"},{"size":5558,"mtime":1608719417182,"results":"35","hashOfConfig":"28"},{"size":791,"mtime":1609055389953,"results":"36","hashOfConfig":"28"},{"size":197,"mtime":1607921202939,"results":"37","hashOfConfig":"28"},{"size":3350,"mtime":1608626262095,"results":"38","hashOfConfig":"28"},{"size":332,"mtime":1608546243709,"results":"39","hashOfConfig":"28"},{"size":112,"mtime":1608544433318,"results":"40","hashOfConfig":"28"},{"size":1474,"mtime":1609063850479,"results":"41","hashOfConfig":"28"},{"size":535,"mtime":1608393441285,"results":"42","hashOfConfig":"28"},{"size":122,"mtime":1608618544154,"results":"43","hashOfConfig":"28"},{"size":365,"mtime":1608705381525,"results":"44","hashOfConfig":"28"},{"size":367,"mtime":1608712829044,"results":"45","hashOfConfig":"28"},{"size":1392,"mtime":1609060626443,"results":"46","hashOfConfig":"28"},{"size":8393,"mtime":1608626678079,"results":"47","hashOfConfig":"28"},{"size":1176,"mtime":1608712165446,"results":"48","hashOfConfig":"28"},{"size":1943,"mtime":1608276983440,"results":"49","hashOfConfig":"28"},{"size":2671,"mtime":1608306182604,"results":"50","hashOfConfig":"28"},{"size":7559,"mtime":1609059409076,"results":"51","hashOfConfig":"28"},{"size":574,"mtime":1609063781083,"results":"52","hashOfConfig":"28"},{"size":1509,"mtime":1609070512251,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"16ear63",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\store.js",["116"],"import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducers from \"./reducers/rootReducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas/sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// const middleware = [sagaMiddleware]; wrong\r\nconst store = createStore(\r\n  rootReducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n",["117","118"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\types.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Dashboard.jsx",["119"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Experience.jsx",["120"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { sendExperienceData } from \"../../redux/actions/experience\";\r\nimport { getUserName } from \"../../redux/actions/auth\";\r\nimport { removeCreateExpAlert } from \"../../redux/actions/alert\";\r\nimport Alert from \"../../Layout/Alert\";\r\n\r\nconst Experience = () => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  const errors = useSelector((state) => state.dashboard.errors);\r\n  const experience = useSelector((state) => state.dashboard.experienceAdded);\r\n  const dispatch = useDispatch();\r\n  const [experienceData, setExperienceData] = useState({\r\n    title: \"\",\r\n    company: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const {\r\n    title,\r\n    company,\r\n    location,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = experienceData;\r\n  useEffect(() => {\r\n    if (from !== \"\") {\r\n      dispatch(removeCreateExpAlert());\r\n    }\r\n  }, [from]);\r\n  if (experience) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    setExperienceData({ ...experienceData, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(experienceData);\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(sendExperienceData({ token, experienceData }));\r\n    dispatch(getUserName(token));\r\n  };\r\n\r\n  const handleRemoveAlertExp = () => {\r\n    dispatch(removeCreateExpAlert());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Education\">\r\n        <h1 className=\"primary-heading\">Add Your Experience</h1>\r\n        <p>Add any school or bootcamp that you have attended</p>\r\n        <h2>Required field</h2>\r\n        {errors.length !== 0\r\n          ? errors.map((error) => {\r\n              return <Alert alert={error} />;\r\n            })\r\n          : \"\"}\r\n        <div className=\"Education__form\">\r\n          <form\r\n            action=\"\"\r\n            className=\"form-row\"\r\n            onSubmit={(e) => handleFormSubmit(e)}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Job Title\"\r\n              onClick={() => handleRemoveAlertExp()}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"company\"\r\n              value={company}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Company\"\r\n              onClick={() => handleRemoveAlertExp()}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Location\"\r\n              onClick={() => handleRemoveAlertExp()}\r\n            />\r\n            <div className=\"form-row__form-group\">\r\n              <label htmlFor=\"date\">\r\n                <h2>From Date</h2>\r\n              </label>\r\n              <input\r\n                style={{ margin: \"0\" }}\r\n                name=\"from\"\r\n                value={from}\r\n                onChange={(e) => handleForm(e)}\r\n                type=\"date\"\r\n                placeholder=\"dd/mm/yy\"\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"12rem\",\r\n                height: \"100%\",\r\n                alignItems: \"baseline\",\r\n              }}\r\n            >\r\n              <input\r\n                style={{\r\n                  height: \"1rem\",\r\n                  width: \"2rem\",\r\n                  marginBottom: \"1rem\",\r\n                }}\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                value={current}\r\n                onChange={() =>\r\n                  setExperienceData({ ...experienceData, current: !current })\r\n                }\r\n              />\r\n              <h2>Current Job</h2>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <label htmlFor=\"date\">\r\n                <h2>To Date</h2>\r\n              </label>\r\n              <input\r\n                style={{ margin: \"0\" }}\r\n                name=\"to\"\r\n                value={to}\r\n                onChange={(e) => handleForm(e)}\r\n                type=\"date\"\r\n                placeholder=\"dd/mm/yy\"\r\n              />\r\n            </div>\r\n            <textarea\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => handleForm(e)}\r\n              onClick={() => handleRemoveAlertExp()}\r\n              id=\"\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"Program Description\"\r\n            ></textarea>\r\n            <button>Submit</button>\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className=\"create\"\r\n              style={{\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n                backgroundColor: \"#30475e\",\r\n                width: \"100%\",\r\n                display: \"block\",\r\n                textAlign: \"center\",\r\n                padding: \"1rem\",\r\n                fontSize: \"1.5rem\",\r\n              }}\r\n            >\r\n              Back\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n",["121","122"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\EducationCredentials.jsx",["123","124","125","126"],"import React from \"react\";\r\nimport formatDate from \"../../Utils/FormatDate\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteEducation } from \"../../redux/actions/education\";\r\nimport { getProfileById } from \"../../redux/actions/profile\";\r\n\r\nconst EducationCredetials = ({\r\n  id,\r\n  from,\r\n  to,\r\n  school,\r\n  current,\r\n  description,\r\n  degree,\r\n  click,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"Credentials\" key={id}>\r\n        <div className=\"Credentials__table\">\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">School</h1>\r\n            </div>\r\n            <h2>{school}</h2>\r\n          </div>\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">Degree</h1>\r\n            </div>\r\n            <h2>{degree}</h2>\r\n          </div>\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">Years</h1>\r\n            </div>\r\n            <h2>\r\n              {formatDate(from)} - {formatDate(to)}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EducationCredetials;\r\n",["127","128"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\sagas\\sagas.js",["129","130"],"import { all, put, takeEvery, call } from \"redux-saga/effects\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport * as type from \"../actions/types\";\r\n\r\n//setAlert\r\nfunction* setAlertSaga(action) {\r\n  const id = uuidv4();\r\n  yield put({ type: type.SET_ALERT, payload: { id, ...action.payload } });\r\n}\r\n\r\nfunction* watchSetAlertSaga() {\r\n  yield takeEvery(type.SET_ALERT_SAGA, setAlertSaga);\r\n}\r\n\r\n//removeAlert\r\nfunction* removeAlert() {\r\n  yield put({ type: type.REMOVE_ALERT });\r\n}\r\n\r\nfunction* watchRemoveAlert() {\r\n  yield takeEvery(type.REMOVE_ALERT_SAGA, removeAlert);\r\n}\r\n\r\n//register\r\n\r\nconst registerData = async (name, email, password) => {\r\n  // const bodyToSend = JSON.stringify({ name, email, password });\r\n  // console.log(bodyToSend);\r\n  // const config = {\r\n  //   header: {\r\n  //     \"Content-Type\": \"application/json\",\r\n  //   },\r\n  // };\r\n  // try {\r\n  //   const res = await axios.post(\"/api/users\", bodyToSend, config);\r\n  //   console.log(res);\r\n  //   return res;\r\n  // } catch (e) {\r\n  //   return e;\r\n  // }\r\n  const body = { name, email, password };\r\n\r\n  const token = await fetch(\"/api/users\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return token;\r\n};\r\n\r\nfunction* registerSaga(action) {\r\n  const { name, email, password } = action.payload;\r\n\r\n  try {\r\n    const res = yield registerData(name, email, password);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.REGISTER_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.REGISTER_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.REGISTER_FAILED });\r\n  }\r\n}\r\nfunction* watchRegisterSaga() {\r\n  yield takeEvery(type.REGISTER_SAGA, registerSaga);\r\n}\r\n//REMOVE ALERT EMAIL\r\nfunction* removeEmailAlertSaga() {\r\n  yield put({ type: type.REMOVE_EMAIL_ALERT });\r\n}\r\nfunction* watchRemoveEmailAlertSaga() {\r\n  yield takeEvery(type.REMOVE_EMAIL_ALERT_SAGA, removeEmailAlertSaga);\r\n}\r\n\r\n//Log In\r\nconst logInData = async (email, password) => {\r\n  const body = { email, password };\r\n  console.log(body);\r\n  const token = await fetch(\"/api/auth/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return token;\r\n};\r\n\r\nfunction* logInSaga(action) {\r\n  const { email, password } = action.payload;\r\n\r\n  try {\r\n    const res = yield logInData(email, password);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.LOG_IN_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.LOG_IN_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.LOG_IN_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchLogInSaga() {\r\n  yield takeEvery(type.LOG_IN_SAGA, logInSaga);\r\n}\r\n\r\n//LOG OUT\r\nfunction* logOutSaga() {\r\n  yield put({ type: type.LOG_OUT });\r\n}\r\n\r\nfunction* watchLogOutSaga() {\r\n  yield takeEvery(type.LOG_OUT_SAGA, logOutSaga);\r\n}\r\n\r\n//GET USER\r\nconst getUser = async (token) => {\r\n  console.log(token);\r\n\r\n  let tokenData = await fetch(\"/api/auth\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return tokenData;\r\n};\r\n\r\nfunction* getUserSaga(action) {\r\n  try {\r\n    const res = yield getUser(action.payload);\r\n    yield put({ type: type.GET_USER, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchGetUserSaga() {\r\n  yield takeEvery(type.GET_USER_SAGA, getUserSaga);\r\n}\r\n\r\n//createProfile\r\nconst createProfile = async (profileData, token) => {\r\n  const fetchData = await fetch(\"/api/profile\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(profileData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return fetchData;\r\n};\r\nfunction* createProfileSaga(action) {\r\n  const { payload } = action;\r\n  const { profileData } = action.payload;\r\n  const { twitter, facebook, linkedin, youtube } = profileData;\r\n  const data = {\r\n    ...profileData,\r\n    social: {\r\n      twitter,\r\n      facebook,\r\n      linkedin,\r\n      youtube,\r\n    },\r\n  };\r\n  try {\r\n    const res = yield createProfile(data, payload.token);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.CREATE_PROFILE_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.CREATE_PROFILE_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.CREATE_PROFILE_FAILED });\r\n  }\r\n}\r\nfunction* watchCreateProfileSaga() {\r\n  yield takeEvery(type.CREATE_PROFILE_SAGA, createProfileSaga);\r\n}\r\n\r\n//profileAlert\r\nfunction* removeCreateProfileAlertSaga() {\r\n  yield put({ type: type.REMOVE_CREATE_PROFILE_ALERT });\r\n}\r\nfunction* watchRemoveCreateProfileAlertSaga() {\r\n  yield takeEvery(\r\n    type.REMOVE_CREATE_PROFILE_ALERT_SAGA,\r\n    removeCreateProfileAlertSaga\r\n  );\r\n}\r\n\r\n//Get profileByID\r\nconst getProfileById = async (token) => {\r\n  const profileData = await fetch(`/api/profile/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return profileData;\r\n};\r\nfunction* getProfileByIdSaga(action) {\r\n  const { payload } = action;\r\n  try {\r\n    const res = yield getProfileById(payload);\r\n    yield put({ type: type.GET_PROFILE, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.GET_PROFILE, payload: error });\r\n  }\r\n}\r\nfunction* watchGetProfileByIdSaga() {\r\n  yield takeEvery(type.GET_PROFILE_SAGA, getProfileByIdSaga);\r\n}\r\n\r\n//Add education\r\nconst updateEducation = async (token, educationData) => {\r\n  const profileData = await fetch(\"api/profile/education\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(educationData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return profileData;\r\n};\r\nfunction* addEducationSaga(action) {\r\n  const { payload } = action;\r\n  const { token, educationData } = payload;\r\n  try {\r\n    const res = yield updateEducation(token, educationData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.SEND_EDUCATION_DATA_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.SEND_EDUCATION_DATA_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.SEND_EDUCATION_DATA_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchAddEducationSaga() {\r\n  yield takeEvery(type.SEND_EDUCATION_DATA_SAGA, addEducationSaga);\r\n}\r\n\r\n//Delete Education\r\nconst deleteEducData = async (token, id) => {\r\n  console.log(id);\r\n  console.log(token);\r\n  const toDelete = await fetch(`api/profile/education/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return toDelete;\r\n};\r\nfunction* deleteEducationSaga(action) {\r\n  const { id, token } = action.payload;\r\n  try {\r\n    const res = yield deleteEducData(token, id);\r\n    yield put({ type: type.DELETE_EDUCATION_DATA, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchDeleteEducationSaga() {\r\n  yield takeEvery(type.DELETE_EDUCATION_DATA_SAGA, deleteEducationSaga);\r\n}\r\n\r\n//remove Education Alert\r\nfunction* removeEducationAlertSaga() {\r\n  yield put({ type: type.REMOVE_EDUCATION_ALERT });\r\n}\r\nfunction* watchRemoveEducationAlertSaga() {\r\n  yield takeEvery(type.REMOVE_EDUCATION_ALERT_SAGA, removeEducationAlertSaga);\r\n}\r\n\r\n//Add experience\r\nconst sendExperienceData = async (token, experienceData) => {\r\n  const experienceDataRes = await fetch(\"api/profile/experience\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(experienceData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n\r\n  return experienceDataRes;\r\n};\r\nfunction* addExperienceSaga(action) {\r\n  const { token, experienceData } = action.payload;\r\n  try {\r\n    const res = yield sendExperienceData(token, experienceData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({\r\n        type: type.SEND_EXPERIENCE_DATA_FAILED,\r\n        payload: res,\r\n      });\r\n    }\r\n    yield put({ type: type.SEND_EXPERIENCE_DATA_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.SEND_EXPERIENCE_DATA_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* wacthExperienceSaga() {\r\n  yield takeEvery(type.SEND_EXPERIENCE_DATA_SAGA, addExperienceSaga);\r\n}\r\n//Delete Experience\r\nconst deleteExpData = async (token, id) => {\r\n  console.log(token);\r\n  const toDelete = await fetch(`api/profile/experience/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return toDelete;\r\n};\r\nfunction* deleteExperienceSaga(action) {\r\n  const { id, token } = action.payload;\r\n  try {\r\n    const res = yield deleteExpData(token, id);\r\n    yield put({ type: type.DELETE_EXPERIENCE_DATA, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchDeleteExperienceSaga() {\r\n  yield takeEvery(type.DELETE_EXPERIENCE_DATA_SAGA, deleteExperienceSaga);\r\n}\r\n\r\n//removeEXP Alert\r\nfunction* removeExperienceAlertSaga() {\r\n  yield put({ type: type.REMOVE_EXPERIENCE_ALERT });\r\n}\r\nfunction* watchRemoveExperienceAlert() {\r\n  yield takeEvery(type.REMOVE_EXPERIENCE_ALERT_SAGA, removeExperienceAlertSaga);\r\n}\r\n\r\n//Update Profile\r\nconst updateProfile = async (token, profileData) => {\r\n  console.log(profileData);\r\n  const data = await fetch(\"api/profile/update-profile\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(profileData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\n\r\nfunction* updateProfileSaga(action) {\r\n  const { token, profileData } = action.payload;\r\n  try {\r\n    const res = yield updateProfile(token, profileData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.UPDATE_PROFILE_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.UPDATE_PROFILE_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    return yield put({ type: type.UPDATE_PROFILE_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchUpdateProfileSaga() {\r\n  yield takeEvery(type.UPDATE_PROFILE_SAGA, updateProfileSaga);\r\n}\r\n\r\n//Get all profile Saga\r\nconst getAllProfiles = async () => {\r\n  const data = await fetch(\"api/profile\", { method: \"GET\" })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\nfunction* getAllProfilesSaga() {\r\n  try {\r\n    const res = yield getAllProfiles();\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      res.status(400).send({ msg: \"error\" });\r\n    }\r\n    yield put({ type: type.GET_ALL_PROFILES, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchGetAllProfileSaga() {\r\n  yield takeEvery(type.GET_ALL_PROFILES_SAGA, getAllProfilesSaga);\r\n}\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchSetAlertSaga(),\r\n    watchRemoveAlert(),\r\n    watchRegisterSaga(),\r\n    watchLogInSaga(),\r\n    watchLogOutSaga(),\r\n    watchRemoveEmailAlertSaga(),\r\n    watchGetUserSaga(),\r\n    watchCreateProfileSaga(),\r\n    watchRemoveCreateProfileAlertSaga(),\r\n    watchGetProfileByIdSaga(),\r\n    watchAddEducationSaga(),\r\n    watchDeleteEducationSaga(),\r\n    watchRemoveEducationAlertSaga(),\r\n    wacthExperienceSaga(),\r\n    watchDeleteExperienceSaga(),\r\n    watchRemoveExperienceAlert(),\r\n    watchUpdateProfileSaga(),\r\n    watchGetAllProfileSaga(),\r\n  ]);\r\n}\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\dashboard.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Education.jsx",["131"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\alert.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\index.js",[],["132","133"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\auth\\Register.jsx",["134"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  setAlert,\r\n  removeAlert,\r\n  removeEmailAlert,\r\n} from \"../redux/actions/alert\";\r\nimport { registerAuth } from \"../redux/actions/auth\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Alert from \"../Layout/Alert\";\r\n\r\nconst Register = () => {\r\n  const isAuth = useSelector((state) => state.auth.isAuth);\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector((state) => state.alert);\r\n  const auth = useSelector((state) => state.auth.msg);\r\n  console.log(alert);\r\n  const [register, setRegister] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    conPassword: \"\",\r\n  });\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setRegister({ ...register, [e.target.name]: e.target.value });\r\n  };\r\n  const handleFocus = () => {\r\n    console.log(\"focus\");\r\n    dispatch(removeEmailAlert());\r\n  };\r\n  console.log(register);\r\n  const { name, email, password, conPassword } = register;\r\n  useEffect(() => {\r\n    if (password !== conPassword) {\r\n      dispatch(setAlert(\"Password don't match\", \"danger\"));\r\n    } else {\r\n      dispatch(removeAlert());\r\n      console.log(\"Password match\");\r\n    }\r\n  }, [password, conPassword]);\r\n  if (isAuth === true) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  const handRegisterBtn = (e) => {\r\n    e.preventDefault();\r\n    if (password !== conPassword) {\r\n      dispatch(setAlert(\"Password don't match\", \"danger\"));\r\n    } else {\r\n      dispatch(removeAlert());\r\n      dispatch(registerAuth({ name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"register\">\r\n        <div className=\"register__container\">\r\n          <h1 className=\"heading-primary\">Register</h1>\r\n\r\n          <div className=\"register__form\">\r\n            <Alert alert={alert} />\r\n            <Alert alert={auth} />\r\n            <form\r\n              className=\"form-row\"\r\n              action=\"submit\"\r\n              onSubmit={(e) => handRegisterBtn(e)}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n                onClick={() => handleFocus()}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"conPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                value={conPassword}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n              />\r\n              <button>Register</button>\r\n            </form>\r\n            <span className=\"span-link\">Already have an account?</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\rootReducers.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\dashboard.js",[],["135","136"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profile.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Alert.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Utils\\FormatDate.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\education.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\experience.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\CreateProfile.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\ExperienceCredentials.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\auth.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Header.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\UpdateProfile.jsx",["137","138"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\profile.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Profiles.jsx",["139","140"],{"ruleId":"141","severity":1,"message":"142","line":1,"column":40,"nodeType":"143","messageId":"144","endLine":1,"endColumn":47},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":38,"column":6,"nodeType":"151","endLine":38,"endColumn":8,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":37,"column":6,"nodeType":"151","endLine":37,"endColumn":12,"suggestions":"154"},{"ruleId":"145","replacedBy":"155"},{"ruleId":"147","replacedBy":"156"},{"ruleId":"141","severity":1,"message":"157","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"158","line":3,"column":23,"nodeType":"143","messageId":"144","endLine":3,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":25},{"ruleId":"141","severity":1,"message":"160","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":24},{"ruleId":"145","replacedBy":"161"},{"ruleId":"147","replacedBy":"162"},{"ruleId":"141","severity":1,"message":"163","line":1,"column":31,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"164","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"153","line":37,"column":6,"nodeType":"151","endLine":37,"endColumn":12,"suggestions":"165"},{"ruleId":"145","replacedBy":"166"},{"ruleId":"147","replacedBy":"167"},{"ruleId":"149","severity":1,"message":"153","line":43,"column":6,"nodeType":"151","endLine":43,"endColumn":29,"suggestions":"168"},{"ruleId":"145","replacedBy":"169"},{"ruleId":"147","replacedBy":"170"},{"ruleId":"141","severity":1,"message":"171","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"172","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"173","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":10,"column":6,"nodeType":"151","endLine":10,"endColumn":8,"suggestions":"174"},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["177"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["178"],["175"],["176"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'deleteEducation' is defined but never used.","'getProfileById' is defined but never used.",["175"],["176"],"'call' is defined but never used.","'axios' is defined but never used.",["179"],["175"],["176"],["180"],["175"],["176"],"'useEffect' is defined but never used.","'setAlert' is defined but never used.","'useState' is defined but never used.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [auth, dispatch, token]",{"range":"191","text":"192"},"Update the dependencies array to be: [dispatch, from]",{"range":"193","text":"194"},{"range":"195","text":"194"},"Update the dependencies array to be: [password, conPassword, dispatch]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},[1455,1457],"[auth, dispatch, token]",[1082,1088],"[dispatch, from]",[1094,1100],[1259,1282],"[password, conPassword, dispatch]",[365,367],"[dispatch]"]