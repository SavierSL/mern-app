[{"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\store.js":"1","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\types.js":"2","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Dashboard.jsx":"3","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Experience.jsx":"4","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\EducationCredentials.jsx":"5","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\sagas\\sagas.js":"6","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\dashboard.js":"7","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Education.jsx":"8","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\alert.js":"9","C:\\Users\\User\\Desktop\\social-app\\client\\src\\index.js":"10","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\auth\\Register.jsx":"11","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\rootReducers.js":"12","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\dashboard.js":"13","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profile.js":"14","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Alert.jsx":"15","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Utils\\FormatDate.js":"16","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\education.js":"17","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\experience.js":"18","C:\\Users\\User\\Desktop\\social-app\\client\\src\\App.js":"19","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\CreateProfile.jsx":"20","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\ExperienceCredentials.jsx":"21","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\auth.js":"22","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Header.jsx":"23","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\UpdateProfile.jsx":"24","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\profile.js":"25","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Profiles.jsx":"26","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profileByID.js":"27","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Profile.jsx":"28","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\alert.js":"29","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\ProfileTabs\\Education.jsx":"30","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\ProfileTabs\\Experience.jsx":"31","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Nav.jsx":"32","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Posts.jsx":"33","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\post.js":"34","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\post.js":"35","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\PostComponent.jsx":"36","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\auth.js":"37"},{"size":529,"mtime":1608132254897,"results":"38","hashOfConfig":"39"},{"size":3340,"mtime":1609311514287,"results":"40","hashOfConfig":"39"},{"size":5721,"mtime":1609207991312,"results":"41","hashOfConfig":"39"},{"size":5511,"mtime":1608719553925,"results":"42","hashOfConfig":"39"},{"size":1368,"mtime":1608643942155,"results":"43","hashOfConfig":"39"},{"size":17529,"mtime":1609316091420,"results":"44","hashOfConfig":"39"},{"size":1956,"mtime":1609313343878,"results":"45","hashOfConfig":"39"},{"size":5558,"mtime":1608719417182,"results":"46","hashOfConfig":"39"},{"size":791,"mtime":1609055389953,"results":"47","hashOfConfig":"39"},{"size":197,"mtime":1607921202939,"results":"48","hashOfConfig":"39"},{"size":3350,"mtime":1608626262095,"results":"49","hashOfConfig":"39"},{"size":447,"mtime":1609217849241,"results":"50","hashOfConfig":"39"},{"size":112,"mtime":1608544433318,"results":"51","hashOfConfig":"39"},{"size":1474,"mtime":1609313338024,"results":"52","hashOfConfig":"39"},{"size":535,"mtime":1608393441285,"results":"53","hashOfConfig":"39"},{"size":122,"mtime":1608618544154,"results":"54","hashOfConfig":"39"},{"size":365,"mtime":1608705381525,"results":"55","hashOfConfig":"39"},{"size":367,"mtime":1608712829044,"results":"56","hashOfConfig":"39"},{"size":1701,"mtime":1609249455449,"results":"57","hashOfConfig":"39"},{"size":8393,"mtime":1608626678079,"results":"58","hashOfConfig":"39"},{"size":1176,"mtime":1608712165446,"results":"59","hashOfConfig":"39"},{"size":1943,"mtime":1608276983440,"results":"60","hashOfConfig":"39"},{"size":2676,"mtime":1609249928383,"results":"61","hashOfConfig":"39"},{"size":7559,"mtime":1609059409076,"results":"62","hashOfConfig":"39"},{"size":713,"mtime":1609137096060,"results":"63","hashOfConfig":"39"},{"size":2063,"mtime":1609155770210,"results":"64","hashOfConfig":"39"},{"size":527,"mtime":1609136428379,"results":"65","hashOfConfig":"39"},{"size":2341,"mtime":1609163025165,"results":"66","hashOfConfig":"39"},{"size":439,"mtime":1608100585872,"results":"67","hashOfConfig":"39"},{"size":1378,"mtime":1609163941694,"results":"68","hashOfConfig":"39"},{"size":1454,"mtime":1609163491187,"results":"69","hashOfConfig":"39"},{"size":954,"mtime":1609249763793,"results":"70","hashOfConfig":"39"},{"size":2674,"mtime":1609314937788,"results":"71","hashOfConfig":"39"},{"size":456,"mtime":1609314402832,"results":"72","hashOfConfig":"39"},{"size":1160,"mtime":1609315982563,"results":"73","hashOfConfig":"39"},{"size":1850,"mtime":1609316888038,"results":"74","hashOfConfig":"39"},{"size":454,"mtime":1608276385623,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"16ear63",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\store.js",["165"],"import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducers from \"./reducers/rootReducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas/sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// const middleware = [sagaMiddleware]; wrong\r\nconst store = createStore(\r\n  rootReducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n",["166","167"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\types.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Dashboard.jsx",["168"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { getUserName } from \"../redux/actions/auth\";\r\nimport { removeCreateProfileAlert } from \"../redux/actions/alert\";\r\nimport { deleteEducation } from \"../redux/actions/education\";\r\nimport { deleteExperience } from \"../redux/actions/experience\";\r\nimport { getProfileById } from \"../redux/actions/profile\";\r\n\r\nimport EducationCredetials from \"./Credentials/EducationCredentials\";\r\nimport ExperienceCredentials from \"./Credentials/ExperienceCredentials\";\r\n\r\nconst Dashboard = () => {\r\n  const auth = useSelector((state) => state.auth.isAuth);\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const name = useSelector((state) => state.auth.user);\r\n  const isProfile = useSelector((state) => state.profile.isProfile);\r\n  const loading = useSelector((state) => state.dashboard.loading);\r\n  const profileData = useSelector((state) => state.dashboard.profile);\r\n\r\n  if (isProfile === true) {\r\n    dispatch(removeCreateProfileAlert());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (auth === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    dispatch(getProfileById(token));\r\n    dispatch(getUserName(token));\r\n  }, []);\r\n\r\n  if (auth === false) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleDeleteButtonEd = (id) => {\r\n    dispatch(deleteEducation({ token, id }));\r\n    console.log(\"clicked\");\r\n  };\r\n  const handleDeleteButtonExp = (id) => {\r\n    dispatch(deleteExperience({ token, id }));\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"dashboard\">\r\n          <h1 className=\"heading-primary\">Dashboard</h1>\r\n\r\n          <div className=\"dashboard__container\">\r\n            <div className=\"dashboard__welcome\">\r\n              <h1 className=\"primary-heading\">\r\n                {name ? (\r\n                  <p>Welcome {name.charAt(0).toUpperCase() + name.slice(1)}</p>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </h1>\r\n            </div>\r\n            {profileData.hasOwnProperty(\"msg\") && !loading ? (\r\n              <div className=\"dashboard__createProfile\">\r\n                <p>You don't have a profile yet</p>\r\n                <button className=\"btn-prim\">\r\n                  <Link to=\"/create-profile\">Create Profile</Link>\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"dashboard__editProfile\">\r\n                <button className=\"btn-prim\">\r\n                  <Link to=\"/update-profile\">Update Profile</Link>\r\n                </button>\r\n                <button className=\"btn-prim\">\r\n                  <Link to=\"/education\">Add Your Education</Link>\r\n                </button>\r\n                <button className=\"btn-prim\">\r\n                  <Link to=\"/experience\">Add Your Experience</Link>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <h1 style={{ marginTop: \"2rem\" }} className=\"primary-heading\">\r\n            Education Credentials\r\n          </h1>\r\n          {profileData.hasOwnProperty(\"msg\") && !loading\r\n            ? \"\"\r\n            : profileData.education.length === 0\r\n            ? \"\"\r\n            : profileData.education.map((data) => {\r\n                const {\r\n                  _id,\r\n                  from,\r\n                  to,\r\n                  school,\r\n                  current,\r\n                  description,\r\n                  degree,\r\n                } = data;\r\n                return (\r\n                  <>\r\n                    <EducationCredetials\r\n                      key={_id}\r\n                      id={_id}\r\n                      from={from}\r\n                      to={to}\r\n                      school={school}\r\n                      current={current}\r\n                      description={description}\r\n                      degree={degree}\r\n                    />\r\n                    <div\r\n                      onClick={() => handleDeleteButtonEd(_id)}\r\n                      className=\"Credentials__table-delete\"\r\n                    >\r\n                      <h1>DEL</h1>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n          <h1 style={{ marginTop: \"2rem\" }} className=\"primary-heading\">\r\n            Experience Credentials\r\n          </h1>\r\n          {profileData.hasOwnProperty(\"msg\") && !loading\r\n            ? \"\"\r\n            : profileData.experience.length === 0\r\n            ? \"\"\r\n            : profileData.experience.map((data) => {\r\n                const {\r\n                  _id,\r\n                  from,\r\n                  to,\r\n                  company,\r\n                  current,\r\n                  description,\r\n                  location,\r\n                  title,\r\n                } = data;\r\n                return (\r\n                  <>\r\n                    <ExperienceCredentials\r\n                      key={_id}\r\n                      id={_id}\r\n                      from={from}\r\n                      to={to}\r\n                      company={company}\r\n                      current={current}\r\n                      description={description}\r\n                      degree={location}\r\n                      title={title}\r\n                    />\r\n                    <div\r\n                      onClick={() => handleDeleteButtonExp(_id)}\r\n                      className=\"Credentials__table-delete\"\r\n                    >\r\n                      <h1>DEL</h1>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n",["169","170"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Experience.jsx",["171"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { sendExperienceData } from \"../../redux/actions/experience\";\r\nimport { getUserName } from \"../../redux/actions/auth\";\r\nimport { removeCreateExpAlert } from \"../../redux/actions/alert\";\r\nimport Alert from \"../../Layout/Alert\";\r\n\r\nconst Experience = () => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  const errors = useSelector((state) => state.dashboard.errors);\r\n  const experience = useSelector((state) => state.dashboard.experienceAdded);\r\n  const dispatch = useDispatch();\r\n  const [experienceData, setExperienceData] = useState({\r\n    title: \"\",\r\n    company: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const {\r\n    title,\r\n    company,\r\n    location,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = experienceData;\r\n  useEffect(() => {\r\n    if (from !== \"\") {\r\n      dispatch(removeCreateExpAlert());\r\n    }\r\n  }, [from]);\r\n  if (experience) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    setExperienceData({ ...experienceData, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(experienceData);\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(sendExperienceData({ token, experienceData }));\r\n    dispatch(getUserName(token));\r\n  };\r\n\r\n  const handleRemoveAlertExp = () => {\r\n    dispatch(removeCreateExpAlert());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Education\">\r\n        <h1 className=\"primary-heading\">Add Your Experience</h1>\r\n        <p>Add any school or bootcamp that you have attended</p>\r\n        <h2>Required field</h2>\r\n        {errors.length !== 0\r\n          ? errors.map((error) => {\r\n              return <Alert alert={error} />;\r\n            })\r\n          : \"\"}\r\n        <div className=\"Education__form\">\r\n          <form\r\n            action=\"\"\r\n            className=\"form-row\"\r\n            onSubmit={(e) => handleFormSubmit(e)}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Job Title\"\r\n              onClick={() => handleRemoveAlertExp()}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"company\"\r\n              value={company}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Company\"\r\n              onClick={() => handleRemoveAlertExp()}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Location\"\r\n              onClick={() => handleRemoveAlertExp()}\r\n            />\r\n            <div className=\"form-row__form-group\">\r\n              <label htmlFor=\"date\">\r\n                <h2>From Date</h2>\r\n              </label>\r\n              <input\r\n                style={{ margin: \"0\" }}\r\n                name=\"from\"\r\n                value={from}\r\n                onChange={(e) => handleForm(e)}\r\n                type=\"date\"\r\n                placeholder=\"dd/mm/yy\"\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"12rem\",\r\n                height: \"100%\",\r\n                alignItems: \"baseline\",\r\n              }}\r\n            >\r\n              <input\r\n                style={{\r\n                  height: \"1rem\",\r\n                  width: \"2rem\",\r\n                  marginBottom: \"1rem\",\r\n                }}\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                value={current}\r\n                onChange={() =>\r\n                  setExperienceData({ ...experienceData, current: !current })\r\n                }\r\n              />\r\n              <h2>Current Job</h2>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <label htmlFor=\"date\">\r\n                <h2>To Date</h2>\r\n              </label>\r\n              <input\r\n                style={{ margin: \"0\" }}\r\n                name=\"to\"\r\n                value={to}\r\n                onChange={(e) => handleForm(e)}\r\n                type=\"date\"\r\n                placeholder=\"dd/mm/yy\"\r\n              />\r\n            </div>\r\n            <textarea\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => handleForm(e)}\r\n              onClick={() => handleRemoveAlertExp()}\r\n              id=\"\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"Program Description\"\r\n            ></textarea>\r\n            <button>Submit</button>\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className=\"create\"\r\n              style={{\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n                backgroundColor: \"#30475e\",\r\n                width: \"100%\",\r\n                display: \"block\",\r\n                textAlign: \"center\",\r\n                padding: \"1rem\",\r\n                fontSize: \"1.5rem\",\r\n              }}\r\n            >\r\n              Back\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n",["172","173"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\EducationCredentials.jsx",["174","175","176","177"],"import React from \"react\";\r\nimport formatDate from \"../../Utils/FormatDate\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteEducation } from \"../../redux/actions/education\";\r\nimport { getProfileById } from \"../../redux/actions/profile\";\r\n\r\nconst EducationCredetials = ({\r\n  id,\r\n  from,\r\n  to,\r\n  school,\r\n  current,\r\n  description,\r\n  degree,\r\n  click,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"Credentials\" key={id}>\r\n        <div className=\"Credentials__table\">\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">School</h1>\r\n            </div>\r\n            <h2>{school}</h2>\r\n          </div>\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">Degree</h1>\r\n            </div>\r\n            <h2>{degree}</h2>\r\n          </div>\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">Years</h1>\r\n            </div>\r\n            <h2>\r\n              {formatDate(from)} - {formatDate(to)}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EducationCredetials;\r\n",["178","179"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\sagas\\sagas.js",["180"],"import { all, put, takeEvery, call } from \"redux-saga/effects\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport * as type from \"../actions/types\";\r\n\r\n//setAlert\r\nfunction* setAlertSaga(action) {\r\n  const id = uuidv4();\r\n  yield put({ type: type.SET_ALERT, payload: { id, ...action.payload } });\r\n}\r\n\r\nfunction* watchSetAlertSaga() {\r\n  yield takeEvery(type.SET_ALERT_SAGA, setAlertSaga);\r\n}\r\n\r\n//removeAlert\r\nfunction* removeAlert() {\r\n  yield put({ type: type.REMOVE_ALERT });\r\n}\r\n\r\nfunction* watchRemoveAlert() {\r\n  yield takeEvery(type.REMOVE_ALERT_SAGA, removeAlert);\r\n}\r\n\r\n//register\r\n\r\nconst registerData = async (name, email, password) => {\r\n  // const bodyToSend = JSON.stringify({ name, email, password });\r\n  // console.log(bodyToSend);\r\n  // const config = {\r\n  //   header: {\r\n  //     \"Content-Type\": \"application/json\",\r\n  //   },\r\n  // };\r\n  // try {\r\n  //   const res = await axios.post(\"/api/users\", bodyToSend, config);\r\n  //   console.log(res);\r\n  //   return res;\r\n  // } catch (e) {\r\n  //   return e;\r\n  // }\r\n  const body = { name, email, password };\r\n\r\n  const token = await fetch(\"/api/users\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return token;\r\n};\r\n\r\nfunction* registerSaga(action) {\r\n  const { name, email, password } = action.payload;\r\n\r\n  try {\r\n    const res = yield registerData(name, email, password);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.REGISTER_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.REGISTER_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.REGISTER_FAILED });\r\n  }\r\n}\r\nfunction* watchRegisterSaga() {\r\n  yield takeEvery(type.REGISTER_SAGA, registerSaga);\r\n}\r\n//REMOVE ALERT EMAIL\r\nfunction* removeEmailAlertSaga() {\r\n  yield put({ type: type.REMOVE_EMAIL_ALERT });\r\n}\r\nfunction* watchRemoveEmailAlertSaga() {\r\n  yield takeEvery(type.REMOVE_EMAIL_ALERT_SAGA, removeEmailAlertSaga);\r\n}\r\n\r\n//Log In\r\nconst logInData = async (email, password) => {\r\n  const body = { email, password };\r\n  console.log(body);\r\n  const token = await fetch(\"/api/auth/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return token;\r\n};\r\n\r\nfunction* logInSaga(action) {\r\n  const { email, password } = action.payload;\r\n\r\n  try {\r\n    const res = yield logInData(email, password);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.LOG_IN_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.LOG_IN_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.LOG_IN_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchLogInSaga() {\r\n  yield takeEvery(type.LOG_IN_SAGA, logInSaga);\r\n}\r\n\r\n//LOG OUT\r\nfunction* logOutSaga() {\r\n  yield put({ type: type.LOG_OUT });\r\n}\r\n\r\nfunction* watchLogOutSaga() {\r\n  yield takeEvery(type.LOG_OUT_SAGA, logOutSaga);\r\n}\r\n\r\n//GET USER\r\nconst getUser = async (token) => {\r\n  console.log(token);\r\n\r\n  let tokenData = await fetch(\"/api/auth\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return tokenData;\r\n};\r\n\r\nfunction* getUserSaga(action) {\r\n  try {\r\n    const res = yield getUser(action.payload);\r\n    yield put({ type: type.GET_USER, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchGetUserSaga() {\r\n  yield takeEvery(type.GET_USER_SAGA, getUserSaga);\r\n}\r\n\r\n//createProfile\r\nconst createProfile = async (profileData, token) => {\r\n  const fetchData = await fetch(\"/api/profile\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(profileData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return fetchData;\r\n};\r\nfunction* createProfileSaga(action) {\r\n  const { payload } = action;\r\n  const { profileData } = action.payload;\r\n  const { twitter, facebook, linkedin, youtube } = profileData;\r\n  const data = {\r\n    ...profileData,\r\n    social: {\r\n      twitter,\r\n      facebook,\r\n      linkedin,\r\n      youtube,\r\n    },\r\n  };\r\n  try {\r\n    const res = yield createProfile(data, payload.token);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.CREATE_PROFILE_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.CREATE_PROFILE_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.CREATE_PROFILE_FAILED });\r\n  }\r\n}\r\nfunction* watchCreateProfileSaga() {\r\n  yield takeEvery(type.CREATE_PROFILE_SAGA, createProfileSaga);\r\n}\r\n\r\n//profileAlert\r\nfunction* removeCreateProfileAlertSaga() {\r\n  yield put({ type: type.REMOVE_CREATE_PROFILE_ALERT });\r\n}\r\nfunction* watchRemoveCreateProfileAlertSaga() {\r\n  yield takeEvery(\r\n    type.REMOVE_CREATE_PROFILE_ALERT_SAGA,\r\n    removeCreateProfileAlertSaga\r\n  );\r\n}\r\n\r\n//Get profileByID\r\nconst getProfileById = async (token) => {\r\n  const profileData = await fetch(`/api/profile/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return profileData;\r\n};\r\nfunction* getProfileByIdSaga(action) {\r\n  const { payload } = action;\r\n  try {\r\n    const res = yield getProfileById(payload);\r\n    yield put({ type: type.GET_PROFILE, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.GET_PROFILE, payload: error });\r\n  }\r\n}\r\nfunction* watchGetProfileByIdSaga() {\r\n  yield takeEvery(type.GET_PROFILE_SAGA, getProfileByIdSaga);\r\n}\r\n\r\n//Add education\r\nconst updateEducation = async (token, educationData) => {\r\n  const profileData = await fetch(\"api/profile/education\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(educationData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return profileData;\r\n};\r\nfunction* addEducationSaga(action) {\r\n  const { payload } = action;\r\n  const { token, educationData } = payload;\r\n  try {\r\n    const res = yield updateEducation(token, educationData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.SEND_EDUCATION_DATA_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.SEND_EDUCATION_DATA_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.SEND_EDUCATION_DATA_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchAddEducationSaga() {\r\n  yield takeEvery(type.SEND_EDUCATION_DATA_SAGA, addEducationSaga);\r\n}\r\n\r\n//Delete Education\r\nconst deleteEducData = async (token, id) => {\r\n  console.log(id);\r\n  console.log(token);\r\n  const toDelete = await fetch(`api/profile/education/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return toDelete;\r\n};\r\nfunction* deleteEducationSaga(action) {\r\n  const { id, token } = action.payload;\r\n  try {\r\n    const res = yield deleteEducData(token, id);\r\n    yield put({ type: type.DELETE_EDUCATION_DATA, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchDeleteEducationSaga() {\r\n  yield takeEvery(type.DELETE_EDUCATION_DATA_SAGA, deleteEducationSaga);\r\n}\r\n\r\n//remove Education Alert\r\nfunction* removeEducationAlertSaga() {\r\n  yield put({ type: type.REMOVE_EDUCATION_ALERT });\r\n}\r\nfunction* watchRemoveEducationAlertSaga() {\r\n  yield takeEvery(type.REMOVE_EDUCATION_ALERT_SAGA, removeEducationAlertSaga);\r\n}\r\n\r\n//Add experience\r\nconst sendExperienceData = async (token, experienceData) => {\r\n  const experienceDataRes = await fetch(\"api/profile/experience\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(experienceData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n\r\n  return experienceDataRes;\r\n};\r\nfunction* addExperienceSaga(action) {\r\n  const { token, experienceData } = action.payload;\r\n  try {\r\n    const res = yield sendExperienceData(token, experienceData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({\r\n        type: type.SEND_EXPERIENCE_DATA_FAILED,\r\n        payload: res,\r\n      });\r\n    }\r\n    yield put({ type: type.SEND_EXPERIENCE_DATA_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.SEND_EXPERIENCE_DATA_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* wacthExperienceSaga() {\r\n  yield takeEvery(type.SEND_EXPERIENCE_DATA_SAGA, addExperienceSaga);\r\n}\r\n//Delete Experience\r\nconst deleteExpData = async (token, id) => {\r\n  console.log(token);\r\n  const toDelete = await fetch(`api/profile/experience/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return toDelete;\r\n};\r\nfunction* deleteExperienceSaga(action) {\r\n  const { id, token } = action.payload;\r\n  try {\r\n    const res = yield deleteExpData(token, id);\r\n    yield put({ type: type.DELETE_EXPERIENCE_DATA, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchDeleteExperienceSaga() {\r\n  yield takeEvery(type.DELETE_EXPERIENCE_DATA_SAGA, deleteExperienceSaga);\r\n}\r\n\r\n//removeEXP Alert\r\nfunction* removeExperienceAlertSaga() {\r\n  yield put({ type: type.REMOVE_EXPERIENCE_ALERT });\r\n}\r\nfunction* watchRemoveExperienceAlert() {\r\n  yield takeEvery(type.REMOVE_EXPERIENCE_ALERT_SAGA, removeExperienceAlertSaga);\r\n}\r\n\r\n//Update Profile\r\nconst updateProfile = async (token, profileData) => {\r\n  console.log(profileData);\r\n  const data = await fetch(\"api/profile/update-profile\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(profileData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\n\r\nfunction* updateProfileSaga(action) {\r\n  const { token, profileData } = action.payload;\r\n  try {\r\n    const res = yield updateProfile(token, profileData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.UPDATE_PROFILE_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.UPDATE_PROFILE_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    return yield put({ type: type.UPDATE_PROFILE_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchUpdateProfileSaga() {\r\n  yield takeEvery(type.UPDATE_PROFILE_SAGA, updateProfileSaga);\r\n}\r\n\r\n//Get all profile Saga\r\nconst getAllProfiles = async () => {\r\n  const data = await fetch(\"api/profile\", { method: \"GET\" })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\nfunction* getAllProfilesSaga() {\r\n  try {\r\n    const res = yield getAllProfiles();\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      res.status(400).send({ msg: \"error\" });\r\n    }\r\n    yield put({ type: type.GET_ALL_PROFILES, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchGetAllProfileSaga() {\r\n  yield takeEvery(type.GET_ALL_PROFILES_SAGA, getAllProfilesSaga);\r\n}\r\n\r\n// GET profile by ID\r\nconst getProfileByIdDATA = async (profileID) => {\r\n  const userID = profileID._id;\r\n  const url = `api/profile/user/${userID}`;\r\n  const content = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  const data = await fetch(url, content)\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\nfunction* getProfileByIDSaga(action) {\r\n  const { profileID } = action.payload;\r\n  try {\r\n    const res = yield getProfileByIdDATA(profileID);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      yield put({ type: type.GET_PROFILE_BY_ID_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.GET_PROFILE_BY_ID_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.GET_PROFILE_BY_ID_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchgetProfileByIDSaga() {\r\n  yield takeEvery(type.GET_PROFILE_BY_ID_SAGA, getProfileByIDSaga);\r\n}\r\n\r\n//post a post\r\nconst postData = async (token, postContent) => {\r\n  const url = \"api/post\";\r\n  const content = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(postContent),\r\n  };\r\n  const data = await fetch(url, content)\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\nfunction* postSaga(action) {\r\n  const { token, postContent } = action.payload;\r\n  try {\r\n    const res = yield postData(token, postContent);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.POST_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.POST_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    return yield put({ type: type.POST_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchPostSaga() {\r\n  yield takeEvery(type.POST_SAGA, postSaga);\r\n}\r\n\r\n//GET ALL POST\r\nconst getAllPost = async (token) => {\r\n  const url = \"api/post\";\r\n  const content = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const data = await fetch(url, content)\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\nfunction* getAllPostSaga(action) {\r\n  const { token } = action.payload;\r\n  try {\r\n    const res = yield getAllPost(token);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.GET_ALL_POST_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.GET_ALL_POST_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.GET_ALL_POST_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchGetAllPostSaga() {\r\n  yield takeEvery(type.GET_ALL_POST_SAGA, getAllPostSaga);\r\n}\r\n\r\n//POST A COMMENT\r\nconst postComment = async (text, token, postID) => {\r\n  console.log(text);\r\n  console.log(postID);\r\n  console.log(token);\r\n  const url = `api/post/comment/${postID}`;\r\n  const content = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(text),\r\n  };\r\n  const data = await fetch(url, content)\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return data;\r\n};\r\nfunction* postCommentSaga(action) {\r\n  const { text, token, postID } = action.payload;\r\n  try {\r\n    const res = yield postComment(text, token, postID);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.POST_COMMENT_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.POST_COMMENT_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.POST_COMMENT_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchPostCommentSaga() {\r\n  yield takeEvery(type.POST_COMMENT_SAGA, postCommentSaga);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchSetAlertSaga(),\r\n    watchRemoveAlert(),\r\n    watchRegisterSaga(),\r\n    watchLogInSaga(),\r\n    watchLogOutSaga(),\r\n    watchRemoveEmailAlertSaga(),\r\n    watchGetUserSaga(),\r\n    watchCreateProfileSaga(),\r\n    watchRemoveCreateProfileAlertSaga(),\r\n    watchGetProfileByIdSaga(),\r\n    watchAddEducationSaga(),\r\n    watchDeleteEducationSaga(),\r\n    watchRemoveEducationAlertSaga(),\r\n    wacthExperienceSaga(),\r\n    watchDeleteExperienceSaga(),\r\n    watchRemoveExperienceAlert(),\r\n    watchUpdateProfileSaga(),\r\n    watchGetAllProfileSaga(),\r\n    watchgetProfileByIDSaga(),\r\n    watchPostSaga(),\r\n    watchGetAllPostSaga(),\r\n    watchPostCommentSaga(),\r\n  ]);\r\n}\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\dashboard.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Education.jsx",["181"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { sendEducationData } from \"../../redux/actions/education\";\r\nimport { getUserName } from \"../../redux/actions/auth\";\r\nimport { removeCreateEducationAlert } from \"../../redux/actions/alert\";\r\nimport Alert from \"../../Layout/Alert\";\r\n\r\nconst Education = () => {\r\n  const errors = useSelector((state) => state.dashboard.errors);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const education = useSelector((state) => state.dashboard.educationAdded);\r\n  const dispatch = useDispatch();\r\n  const [educationData, setEducationData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = educationData;\r\n  useEffect(() => {\r\n    if (from !== \"\") {\r\n      dispatch(removeCreateEducationAlert());\r\n    }\r\n  }, [from]);\r\n\r\n  if (education) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    setEducationData({ ...educationData, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(educationData);\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(sendEducationData({ token, educationData }));\r\n    dispatch(getUserName(token));\r\n  };\r\n\r\n  const handleRemoveEducationAlert = (e) => {\r\n    e.preventDefault();\r\n    dispatch(removeCreateEducationAlert());\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"Education\">\r\n        <h1 className=\"primary-heading\">Add Your Education</h1>\r\n        <p>Add any school or bootcamp that you have attended</p>\r\n        <h2>Required field</h2>\r\n        {errors.length !== 0\r\n          ? errors.map((error) => {\r\n              return <Alert alert={error} />;\r\n            })\r\n          : \"\"}\r\n        <div className=\"Education__form\">\r\n          <form\r\n            action=\"\"\r\n            className=\"form-row\"\r\n            onSubmit={(e) => handleFormSubmit(e)}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"school\"\r\n              value={school}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"School or Bootcamp\"\r\n              onClick={(e) => handleRemoveEducationAlert(e)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"degree\"\r\n              value={degree}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Degree or Certificate\"\r\n              onClick={(e) => handleRemoveEducationAlert(e)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"fieldofstudy\"\r\n              value={fieldofstudy}\r\n              onChange={(e) => handleForm(e)}\r\n              placeholder=\"Field of Study\"\r\n            />\r\n            <div className=\"form-row__form-group\">\r\n              <label htmlFor=\"date\">\r\n                <h2>From Date</h2>\r\n              </label>\r\n              <input\r\n                style={{ margin: \"0\" }}\r\n                name=\"from\"\r\n                value={from}\r\n                onChange={(e) => handleForm(e)}\r\n                type=\"date\"\r\n                placeholder=\"dd/mm/yy\"\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"12rem\",\r\n                height: \"100%\",\r\n                alignItems: \"baseline\",\r\n              }}\r\n            >\r\n              <input\r\n                style={{\r\n                  height: \"1rem\",\r\n                  width: \"2rem\",\r\n                  marginBottom: \"1rem\",\r\n                }}\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                value={current}\r\n                onChange={() =>\r\n                  setEducationData({ ...educationData, current: !current })\r\n                }\r\n              />\r\n              <h2>Current Job</h2>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <label htmlFor=\"date\">\r\n                <h2>To Date</h2>\r\n              </label>\r\n              <input\r\n                style={{ margin: \"0\" }}\r\n                name=\"to\"\r\n                value={to}\r\n                onChange={(e) => handleForm(e)}\r\n                type=\"date\"\r\n                placeholder=\"dd/mm/yy\"\r\n              />\r\n            </div>\r\n            <textarea\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => handleForm(e)}\r\n              onClick={(e) => handleRemoveEducationAlert(e)}\r\n              id=\"\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"Program Description\"\r\n            ></textarea>\r\n            <button>Submit</button>\r\n\r\n            <Link\r\n              to=\"/dashboard\"\r\n              className=\"create\"\r\n              style={{\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n                backgroundColor: \"#30475e\",\r\n                width: \"100%\",\r\n                display: \"block\",\r\n                textAlign: \"center\",\r\n                padding: \"1rem\",\r\n                fontSize: \"1.5rem\",\r\n              }}\r\n            >\r\n              Back\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n",["182","183"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\alert.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\index.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\auth\\Register.jsx",["184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  setAlert,\r\n  removeAlert,\r\n  removeEmailAlert,\r\n} from \"../redux/actions/alert\";\r\nimport { registerAuth } from \"../redux/actions/auth\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Alert from \"../Layout/Alert\";\r\n\r\nconst Register = () => {\r\n  const isAuth = useSelector((state) => state.auth.isAuth);\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector((state) => state.alert);\r\n  const auth = useSelector((state) => state.auth.msg);\r\n  console.log(alert);\r\n  const [register, setRegister] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    conPassword: \"\",\r\n  });\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setRegister({ ...register, [e.target.name]: e.target.value });\r\n  };\r\n  const handleFocus = () => {\r\n    console.log(\"focus\");\r\n    dispatch(removeEmailAlert());\r\n  };\r\n  console.log(register);\r\n  const { name, email, password, conPassword } = register;\r\n  useEffect(() => {\r\n    if (password !== conPassword) {\r\n      dispatch(setAlert(\"Password don't match\", \"danger\"));\r\n    } else {\r\n      dispatch(removeAlert());\r\n      console.log(\"Password match\");\r\n    }\r\n  }, [password, conPassword]);\r\n  if (isAuth === true) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  const handRegisterBtn = (e) => {\r\n    e.preventDefault();\r\n    if (password !== conPassword) {\r\n      dispatch(setAlert(\"Password don't match\", \"danger\"));\r\n    } else {\r\n      dispatch(removeAlert());\r\n      dispatch(registerAuth({ name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"register\">\r\n        <div className=\"register__container\">\r\n          <h1 className=\"heading-primary\">Register</h1>\r\n\r\n          <div className=\"register__form\">\r\n            <Alert alert={alert} />\r\n            <Alert alert={auth} />\r\n            <form\r\n              className=\"form-row\"\r\n              action=\"submit\"\r\n              onSubmit={(e) => handRegisterBtn(e)}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n                onClick={() => handleFocus()}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"conPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                value={conPassword}\r\n                onChange={(e) => handleForm(e)}\r\n                required\r\n              />\r\n              <button>Register</button>\r\n            </form>\r\n            <span className=\"span-link\">Already have an account?</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\rootReducers.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\dashboard.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profile.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Alert.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Utils\\FormatDate.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\education.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\experience.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\CreateProfile.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\ExperienceCredentials.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\auth.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Header.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\UpdateProfile.jsx",["185","186"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateProfile } from \"../redux/actions/profile\";\r\nimport { setAlert } from \"../redux/actions/alert\";\r\nimport Alert from \"../Layout/Alert\";\r\n\r\nconst UpdateProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const profileData = useSelector((state) => state.dashboard.profile);\r\n  const isProfile = useSelector((state) => state.profile);\r\n  const saveAlert = {\r\n    alert: [\r\n      {\r\n        msg: \"Saved\",\r\n      },\r\n    ],\r\n  };\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [save, setSave] = useState(false);\r\n  const [profile, setProfile] = useState(profileData);\r\n  // useEffect(() => {\r\n\r\n  //   console.log(\"runned\");\r\n  // }, [save]);\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault(e);\r\n    setProfile({ ...profile, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(profile);\r\n  const handleSaveButton = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProfile(token, profile));\r\n    if (isProfile.profile !== null && isProfile.errors.length === 0) {\r\n      setSave(true);\r\n      console.log(\"true\");\r\n    }\r\n    setTimeout(() => {\r\n      setSave(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"createProfile\">\r\n        <h1 style={{ marginBottom: \"4rem\" }} className=\"heading-primary\">\r\n          Update Profile\r\n        </h1>\r\n        <div className=\"createProfile__form\">\r\n          {save ? <Alert alert={saveAlert.alert} /> : \"\"}\r\n          <form\r\n            action=\"\"\r\n            className=\"form-row\"\r\n            onSubmit={(e) => handleSaveButton(e)}\r\n          >\r\n            <div className=\"form-row__form-group\">\r\n              <select\r\n                name=\"status\"\r\n                value={profile.status}\r\n                onChange={(e) => handleOnChange(e)}\r\n              >\r\n                <option>* Select Professional Status</option>\r\n                <option value=\"Developer\">Developer</option>\r\n                <option value=\"Junior Developer\">Junior Developer</option>\r\n                <option value=\"Senior Developer\">Senior Developer</option>\r\n                <option value=\"Manager\">Manager</option>\r\n                <option value=\"Student or Learning\">Student or Learning</option>\r\n                <option value=\"Instructor\">Instructor or Teacher</option>\r\n                <option value=\"Intern\">Intern</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n              <small className=\"form-row__form-text\">\r\n                Give us an idea of where you are at in your career\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Company\"\r\n                name=\"company\"\r\n                value={profile.company}\r\n                onChange={(e) => handleOnChange(e)}\r\n              />\r\n              <small className=\"form-row__form-text\">\r\n                Could be your own company or one you work for\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Website\"\r\n                name=\"website\"\r\n                value={profile.website}\r\n                onChange={(e) => handleOnChange(e)}\r\n              />\r\n              <small className=\"form-row__form-text\">\r\n                Could be your own company or own website\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Location\"\r\n                name=\"location\"\r\n                value={profile.location}\r\n                onChange={(e) => handleOnChange(e)}\r\n              />\r\n              <small className=\"form-row__form-text\">\r\n                CIty &amp; state suggested (eg. Boston, MA\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"* Skills\"\r\n                name=\"skills\"\r\n                value={profile.skills}\r\n                onChange={(e) => handleOnChange(e)}\r\n              />\r\n              <small className=\"form-row__form-text\">\r\n                Please use comma separated values (eg. CSS, JS, REACT)\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Github Username\"\r\n                name=\"githubusername\"\r\n                value={profile.githubusername}\r\n                onChange={(e) => handleOnChange(e)}\r\n              />\r\n              <small className=\"form-row__form-text\">\r\n                Could be your own company or one you work for\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <textarea\r\n                type=\"text\"\r\n                placeholder=\"Bio\"\r\n                name=\"bio\"\r\n                value={profile.bio}\r\n                onChange={(e) => handleOnChange(e)}\r\n              />\r\n              <small className=\"form-row__form-text\">\r\n                Tell us a little about yourself\r\n              </small>\r\n            </div>\r\n            <div className=\"form-row__form-group\">\r\n              <button>\r\n                Update social network links{\" \"}\r\n                <span style={{ fontSize: \"1rem\", color: \"black\" }}>\r\n                  optional\r\n                </span>\r\n              </button>\r\n            </div>\r\n            {profile.social ? (\r\n              <div className=\"social\">\r\n                <div className=\"social-group\">\r\n                  <i className=\"fab fa-twitter fa-4x\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Twitter URL\"\r\n                    value={profile.social.twitter}\r\n                    onChange={(e) => handleOnChange(e)}\r\n                    name=\"twitter\"\r\n                  />\r\n                </div>\r\n                <div className=\"social-group\">\r\n                  <i className=\"fab fa-facebook fa-4x\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Twitter URL\"\r\n                    value={profile.social.facebook}\r\n                    onChange={(e) => handleOnChange(e)}\r\n                    name=\"facebook\"\r\n                  />\r\n                </div>\r\n                <div className=\"social-group\">\r\n                  <i className=\"fab fa-youtube fa-4x\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Twitter URL\"\r\n                    value={profile.social.youtube}\r\n                    onChange={(e) => handleOnChange(e)}\r\n                    name=\"youtube\"\r\n                  />\r\n                </div>\r\n                <div className=\"social-group\">\r\n                  <i className=\"fab fa-linkedin fa-4x\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Twitter URL\"\r\n                    name=\"\"\r\n                    value={profile.social.linkedin}\r\n                    onChange={(e) => handleOnChange(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <button>Save</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\profile.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Profiles.jsx",["187","188"],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllProfiles, viewProfile } from \"../redux/actions/profile\";\r\n\r\nconst Profiles = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [redirect, setRedirect] = useState(false);\r\n  const allProfiles = useSelector((state) => state.profile.allProfile);\r\n  useEffect(() => {\r\n    dispatch(getAllProfiles());\r\n  }, [redirect]);\r\n  const handleViewProfile = (e, profileID) => {\r\n    const path = \"/profiles/profile\";\r\n\r\n    e.preventDefault();\r\n    setRedirect(!redirect);\r\n    dispatch(viewProfile(profileID));\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profiles\">\r\n        <h1 className=\"heading-primary\">Developers</h1>\r\n        {allProfiles != null\r\n          ? allProfiles.map((data) => {\r\n              console.log(data.user.avatar);\r\n              return (\r\n                <div className=\"profiles__profile\">\r\n                  <img\r\n                    src={data.user.avatar}\r\n                    alt=\"\"\r\n                    className=\"profiles__profile-img\"\r\n                  />\r\n                  <div className=\"profiles__profile-details\">\r\n                    <h2>{data.user.name}</h2>\r\n                    <p>{data.bio}</p>\r\n                    <p>{data.location}</p>\r\n                    <div className=\"view-profile\">\r\n                      <button onClick={(e) => handleViewProfile(e, data.user)}>\r\n                        View Profile\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"profiles__profile-skills\">\r\n                    <h2>Skills</h2>\r\n                    {data.skills.map((skill) => {\r\n                      return <p>{skill}</p>;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profileByID.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Profile.jsx",["189","190","191","192","193","194","195","196","197","198"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EducationTab from \"./ProfileTabs/Education\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ExperienceTab from \"./ProfileTabs/Experience\";\r\n\r\nconst Profile = () => {\r\n  const [educationTab, setEducationTab] = useState(true);\r\n  const profileData = useSelector((state) => state.profileByID.profileIDData);\r\n  console.log(profileData);\r\n  const {\r\n    user,\r\n    company,\r\n    website,\r\n    location,\r\n    githubusername,\r\n    experience,\r\n    education,\r\n    socail,\r\n    skills,\r\n    bio,\r\n    status,\r\n  } = profileData ? profileData : \"\";\r\n\r\n  const handleExpBtn = (e) => {\r\n    e.preventDefault();\r\n    setEducationTab(false);\r\n  };\r\n  const handleEdBtn = (e) => {\r\n    e.preventDefault();\r\n    setEducationTab(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"profile\">\r\n        <h1 className=\"heading-primary\">Profile</h1>\r\n\r\n        {profileData ? (\r\n          <>\r\n            <div className=\"profile__container\">\r\n              <div className=\"profile__container-1st\">\r\n                <img src={user.avatar} alt=\"\" />\r\n                <div className=\"profile__container-skillSet\">\r\n                  <h2>Skill Set</h2>\r\n                  <div className=\"profile__container-skillSets\">\r\n                    {skills.map((skill) => {\r\n                      return <h3 className=\"skills\">{skill}</h3>;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile__container-details\">\r\n                <h1>{user.name}</h1>\r\n                <h1>{status}</h1>\r\n                <h2>{bio}</h2>\r\n                <h2>{`Github username: ${githubusername}`}</h2>\r\n                <div className=\"line\"></div>\r\n                <div className=\"profile__container-details-buttons\">\r\n                  <button onClick={(e) => handleEdBtn(e)}>Education</button>\r\n\r\n                  <button onClick={(e) => handleExpBtn(e)}>Experience</button>\r\n                </div>\r\n                {educationTab ? <EducationTab /> : <ExperienceTab />}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\alert.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\ProfileTabs\\Education.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\ProfileTabs\\Experience.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Nav.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Posts.jsx",["199"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\post.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\post.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\PostComponent.jsx",["200","201"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\auth.js",[],{"ruleId":"202","severity":1,"message":"203","line":1,"column":40,"nodeType":"204","messageId":"205","endLine":1,"endColumn":47},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":32,"column":6,"nodeType":"212","endLine":32,"endColumn":8,"suggestions":"213"},{"ruleId":"206","replacedBy":"214"},{"ruleId":"208","replacedBy":"215"},{"ruleId":"210","severity":1,"message":"216","line":37,"column":6,"nodeType":"212","endLine":37,"endColumn":12,"suggestions":"217"},{"ruleId":"206","replacedBy":"218"},{"ruleId":"208","replacedBy":"219"},{"ruleId":"202","severity":1,"message":"220","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":21},{"ruleId":"202","severity":1,"message":"221","line":3,"column":23,"nodeType":"204","messageId":"205","endLine":3,"endColumn":34},{"ruleId":"202","severity":1,"message":"222","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":25},{"ruleId":"202","severity":1,"message":"223","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":24},{"ruleId":"206","replacedBy":"224"},{"ruleId":"208","replacedBy":"225"},{"ruleId":"202","severity":1,"message":"226","line":1,"column":31,"nodeType":"204","messageId":"205","endLine":1,"endColumn":35},{"ruleId":"210","severity":1,"message":"216","line":37,"column":6,"nodeType":"212","endLine":37,"endColumn":12,"suggestions":"227"},{"ruleId":"206","replacedBy":"228"},{"ruleId":"208","replacedBy":"229"},{"ruleId":"210","severity":1,"message":"216","line":43,"column":6,"nodeType":"212","endLine":43,"endColumn":29,"suggestions":"230"},{"ruleId":"202","severity":1,"message":"231","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"232","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":18},{"ruleId":"202","severity":1,"message":"233","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":18},{"ruleId":"210","severity":1,"message":"216","line":13,"column":6,"nodeType":"212","endLine":13,"endColumn":16,"suggestions":"234"},{"ruleId":"202","severity":1,"message":"235","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"236","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"237","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"238","line":5,"column":42,"nodeType":"204","messageId":"205","endLine":5,"endColumn":48},{"ruleId":"202","severity":1,"message":"239","line":14,"column":5,"nodeType":"204","messageId":"205","endLine":14,"endColumn":12},{"ruleId":"202","severity":1,"message":"240","line":15,"column":5,"nodeType":"204","messageId":"205","endLine":15,"endColumn":12},{"ruleId":"202","severity":1,"message":"241","line":16,"column":5,"nodeType":"204","messageId":"205","endLine":16,"endColumn":13},{"ruleId":"202","severity":1,"message":"242","line":18,"column":5,"nodeType":"204","messageId":"205","endLine":18,"endColumn":15},{"ruleId":"202","severity":1,"message":"243","line":19,"column":5,"nodeType":"204","messageId":"205","endLine":19,"endColumn":14},{"ruleId":"202","severity":1,"message":"244","line":20,"column":5,"nodeType":"204","messageId":"205","endLine":20,"endColumn":11},{"ruleId":"210","severity":1,"message":"245","line":20,"column":6,"nodeType":"212","endLine":20,"endColumn":13,"suggestions":"246"},{"ruleId":"210","severity":1,"message":"245","line":22,"column":6,"nodeType":"212","endLine":22,"endColumn":13,"suggestions":"247"},{"ruleId":"202","severity":1,"message":"248","line":23,"column":9,"nodeType":"204","messageId":"205","endLine":23,"endColumn":17},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["249"],"no-negated-in-lhs",["250"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["251"],["249"],["250"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["252"],["249"],["250"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'deleteEducation' is defined but never used.","'getProfileById' is defined but never used.",["249"],["250"],"'call' is defined but never used.",["253"],["249"],["250"],["254"],"'useEffect' is defined but never used.","'setAlert' is defined but never used.","'Redirect' is defined but never used.",["255"],"'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'company' is assigned a value but never used.","'website' is assigned a value but never used.","'location' is assigned a value but never used.","'experience' is assigned a value but never used.","'education' is assigned a value but never used.","'socail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["256"],["257"],"'profiles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"260","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"267","fix":"269"},"Update the dependencies array to be: [auth, dispatch, token]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, from]",{"range":"272","text":"273"},{"range":"274","text":"273"},"Update the dependencies array to be: [password, conPassword, dispatch]",{"range":"275","text":"276"},"Update the dependencies array to be: [dispatch, redirect]",{"range":"277","text":"278"},"Update the dependencies array to be: [click, dispatch, token]",{"range":"279","text":"280"},{"range":"281","text":"280"},[1307,1309],"[auth, dispatch, token]",[1082,1088],"[dispatch, from]",[1094,1100],[1259,1282],"[password, conPassword, dispatch]",[521,531],"[dispatch, redirect]",[689,696],"[click, dispatch, token]",[497,504]]