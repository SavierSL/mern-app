[{"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\store.js":"1","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\types.js":"2","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Dashboard.jsx":"3","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Experience.jsx":"4","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\EducationCredentials.jsx":"5","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\sagas\\sagas.js":"6","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\dashboard.js":"7","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Education.jsx":"8","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\alert.js":"9","C:\\Users\\User\\Desktop\\social-app\\client\\src\\index.js":"10","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\auth\\Register.jsx":"11","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\rootReducers.js":"12","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\dashboard.js":"13","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profile.js":"14","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Alert.jsx":"15","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Utils\\FormatDate.js":"16","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\education.js":"17","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\experience.js":"18","C:\\Users\\User\\Desktop\\social-app\\client\\src\\App.js":"19","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\CreateProfile.jsx":"20","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\ExperienceCredentials.jsx":"21"},{"size":529,"mtime":1608132254897,"results":"22","hashOfConfig":"23"},{"size":2058,"mtime":1608712744316,"results":"24","hashOfConfig":"23"},{"size":6041,"mtime":1608715794965,"results":"25","hashOfConfig":"23"},{"size":4863,"mtime":1608717367381,"results":"26","hashOfConfig":"23"},{"size":1368,"mtime":1608643942155,"results":"27","hashOfConfig":"23"},{"size":11116,"mtime":1608717273087,"results":"28","hashOfConfig":"23"},{"size":1784,"mtime":1608712697510,"results":"29","hashOfConfig":"23"},{"size":5444,"mtime":1608699147595,"results":"30","hashOfConfig":"23"},{"size":615,"mtime":1608696417428,"results":"31","hashOfConfig":"23"},{"size":197,"mtime":1607921202939,"results":"32","hashOfConfig":"23"},{"size":3350,"mtime":1608626262095,"results":"33","hashOfConfig":"23"},{"size":332,"mtime":1608546243709,"results":"34","hashOfConfig":"23"},{"size":112,"mtime":1608544433318,"results":"35","hashOfConfig":"23"},{"size":939,"mtime":1608638845848,"results":"36","hashOfConfig":"23"},{"size":535,"mtime":1608393441285,"results":"37","hashOfConfig":"23"},{"size":122,"mtime":1608618544154,"results":"38","hashOfConfig":"23"},{"size":365,"mtime":1608705381525,"results":"39","hashOfConfig":"23"},{"size":367,"mtime":1608712829044,"results":"40","hashOfConfig":"23"},{"size":1139,"mtime":1608643790229,"results":"41","hashOfConfig":"23"},{"size":8393,"mtime":1608626678079,"results":"42","hashOfConfig":"23"},{"size":1176,"mtime":1608712165446,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"16ear63",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\store.js",["90"],"import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducers from \"./reducers/rootReducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas/sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// const middleware = [sagaMiddleware]; wrong\r\nconst store = createStore(\r\n  rootReducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n",["91","92"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\types.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Dashboard.jsx",["93","94"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Experience.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\EducationCredentials.jsx",["95","96","97","98"],"import React from \"react\";\r\nimport formatDate from \"../../Utils/FormatDate\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteEducation } from \"../../redux/actions/education\";\r\nimport { getProfileById } from \"../../redux/actions/profile\";\r\n\r\nconst EducationCredetials = ({\r\n  id,\r\n  from,\r\n  to,\r\n  school,\r\n  current,\r\n  description,\r\n  degree,\r\n  click,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"Credentials\" key={id}>\r\n        <div className=\"Credentials__table\">\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">School</h1>\r\n            </div>\r\n            <h2>{school}</h2>\r\n          </div>\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">Degree</h1>\r\n            </div>\r\n            <h2>{degree}</h2>\r\n          </div>\r\n          <div className=\"Credentials__table-grp\">\r\n            <div className=\"Credentials__table-grp-title\">\r\n              <h1 className=\"primary-heading\">Years</h1>\r\n            </div>\r\n            <h2>\r\n              {formatDate(from)} - {formatDate(to)}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EducationCredetials;\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\sagas\\sagas.js",["99","100"],"import { all, put, takeEvery, call } from \"redux-saga/effects\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport * as type from \"../actions/types\";\r\n\r\n//setAlert\r\nfunction* setAlertSaga(action) {\r\n  const id = uuidv4();\r\n  yield put({ type: type.SET_ALERT, payload: { id, ...action.payload } });\r\n}\r\n\r\nfunction* watchSetAlertSaga() {\r\n  yield takeEvery(type.SET_ALERT_SAGA, setAlertSaga);\r\n}\r\n\r\n//removeAlert\r\nfunction* removeAlert() {\r\n  yield put({ type: type.REMOVE_ALERT });\r\n}\r\n\r\nfunction* watchRemoveAlert() {\r\n  yield takeEvery(type.REMOVE_ALERT_SAGA, removeAlert);\r\n}\r\n\r\n//register\r\n\r\nconst registerData = async (name, email, password) => {\r\n  // const bodyToSend = JSON.stringify({ name, email, password });\r\n  // console.log(bodyToSend);\r\n  // const config = {\r\n  //   header: {\r\n  //     \"Content-Type\": \"application/json\",\r\n  //   },\r\n  // };\r\n  // try {\r\n  //   const res = await axios.post(\"/api/users\", bodyToSend, config);\r\n  //   console.log(res);\r\n  //   return res;\r\n  // } catch (e) {\r\n  //   return e;\r\n  // }\r\n  const body = { name, email, password };\r\n\r\n  const token = await fetch(\"/api/users\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return token;\r\n};\r\n\r\nfunction* registerSaga(action) {\r\n  const { name, email, password } = action.payload;\r\n\r\n  try {\r\n    const res = yield registerData(name, email, password);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.REGISTER_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.REGISTER_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.REGISTER_FAILED });\r\n  }\r\n}\r\nfunction* watchRegisterSaga() {\r\n  yield takeEvery(type.REGISTER_SAGA, registerSaga);\r\n}\r\n//REMOVE ALERT EMAIL\r\nfunction* removeEmailAlertSaga() {\r\n  yield put({ type: type.REMOVE_EMAIL_ALERT });\r\n}\r\nfunction* watchRemoveEmailAlertSaga() {\r\n  yield takeEvery(type.REMOVE_EMAIL_ALERT_SAGA, removeEmailAlertSaga);\r\n}\r\n\r\n//Log In\r\nconst logInData = async (email, password) => {\r\n  const body = { email, password };\r\n  console.log(body);\r\n  const token = await fetch(\"/api/auth/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return token;\r\n};\r\n\r\nfunction* logInSaga(action) {\r\n  const { email, password } = action.payload;\r\n\r\n  try {\r\n    const res = yield logInData(email, password);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.LOG_IN_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.LOG_IN_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.LOG_IN_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchLogInSaga() {\r\n  yield takeEvery(type.LOG_IN_SAGA, logInSaga);\r\n}\r\n\r\n//LOG OUT\r\nfunction* logOutSaga() {\r\n  yield put({ type: type.LOG_OUT });\r\n}\r\n\r\nfunction* watchLogOutSaga() {\r\n  yield takeEvery(type.LOG_OUT_SAGA, logOutSaga);\r\n}\r\n\r\n//GET USER\r\nconst getUser = async (token) => {\r\n  console.log(token);\r\n\r\n  let tokenData = await fetch(\"/api/auth\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return tokenData;\r\n};\r\n\r\nfunction* getUserSaga(action) {\r\n  try {\r\n    const res = yield getUser(action.payload);\r\n    yield put({ type: type.GET_USER, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchGetUserSaga() {\r\n  yield takeEvery(type.GET_USER_SAGA, getUserSaga);\r\n}\r\n\r\n//createProfile\r\nconst createProfile = async (profileData, token) => {\r\n  const fetchData = await fetch(\"/api/profile\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"x-auth-token\": token,\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(profileData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return fetchData;\r\n};\r\nfunction* createProfileSaga(action) {\r\n  const { payload } = action;\r\n  const { profileData } = action.payload;\r\n  const { twitter, facebook, linkedin, youtube } = profileData;\r\n  const data = {\r\n    ...profileData,\r\n    social: {\r\n      twitter,\r\n      facebook,\r\n      linkedin,\r\n      youtube,\r\n    },\r\n  };\r\n  try {\r\n    const res = yield createProfile(data, payload.token);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.CREATE_PROFILE_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.CREATE_PROFILE_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.CREATE_PROFILE_FAILED });\r\n  }\r\n}\r\nfunction* watchCreateProfileSaga() {\r\n  yield takeEvery(type.CREATE_PROFILE_SAGA, createProfileSaga);\r\n}\r\n\r\n//profileAlert\r\nfunction* removeCreateProfileAlertSaga() {\r\n  yield put({ type: type.REMOVE_CREATE_PROFILE_ALERT });\r\n}\r\nfunction* watchRemoveCreateProfileAlertSaga() {\r\n  yield takeEvery(\r\n    type.REMOVE_CREATE_PROFILE_ALERT_SAGA,\r\n    removeCreateProfileAlertSaga\r\n  );\r\n}\r\n\r\n//Get profileByID\r\nconst getProfileById = async (token) => {\r\n  const profileData = await fetch(`/api/profile/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      throw e;\r\n    });\r\n  return profileData;\r\n};\r\nfunction* getProfileByIdSaga(action) {\r\n  const { payload } = action;\r\n  try {\r\n    const res = yield getProfileById(payload);\r\n    yield put({ type: type.GET_PROFILE, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.GET_PROFILE, payload: error });\r\n  }\r\n}\r\nfunction* watchGetProfileByIdSaga() {\r\n  yield takeEvery(type.GET_PROFILE_SAGA, getProfileByIdSaga);\r\n}\r\n\r\n//Add education\r\nconst updateEducation = async (token, educationData) => {\r\n  const profileData = await fetch(\"api/profile/education\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(educationData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return profileData;\r\n};\r\nfunction* addEducationSaga(action) {\r\n  const { payload } = action;\r\n  const { token, educationData } = payload;\r\n  try {\r\n    const res = yield updateEducation(token, educationData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({ type: type.SEND_EDUCATION_DATA_FAILED, payload: res });\r\n    }\r\n    yield put({ type: type.SEND_EDUCATION_DATA_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.SEND_EDUCATION_DATA_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* watchAddEducationSaga() {\r\n  yield takeEvery(type.SEND_EDUCATION_DATA_SAGA, addEducationSaga);\r\n}\r\n\r\n//Delete Education\r\nconst deleteEducData = async (token, id) => {\r\n  console.log(id);\r\n  console.log(token);\r\n  const toDelete = await fetch(`api/profile/education/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return toDelete;\r\n};\r\nfunction* deleteEducationSaga(action) {\r\n  const { id, token } = action.payload;\r\n  try {\r\n    const res = yield deleteEducData(token, id);\r\n    yield put({ type: type.DELETE_EDUCATION_DATA, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchDeleteEducationSaga() {\r\n  yield takeEvery(type.DELETE_EDUCATION_DATA_SAGA, deleteEducationSaga);\r\n}\r\n\r\n//remove Education Alert\r\nfunction* removeEducationAlertSaga() {\r\n  yield put({ type: type.REMOVE_EDUCATION_ALERT });\r\n}\r\nfunction* watchRemoveEducationAlertSaga() {\r\n  yield takeEvery(type.REMOVE_EDUCATION_ALERT_SAGA, removeEducationAlertSaga);\r\n}\r\n\r\n//Add experience\r\nconst sendExperienceData = async (token, experienceData) => {\r\n  const experienceDataRes = await fetch(\"api/profile/experience\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n    body: JSON.stringify(experienceData),\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n\r\n  return experienceDataRes;\r\n};\r\nfunction* addExperienceSaga(action) {\r\n  const { token, experienceData } = action.payload;\r\n  try {\r\n    const res = yield sendExperienceData(token, experienceData);\r\n    if (res.hasOwnProperty(\"errors\")) {\r\n      return yield put({\r\n        type: type.SEND_EXPERIENCE_DATA_FAILED,\r\n        payload: res,\r\n      });\r\n    }\r\n    yield put({ type: type.SEND_EXPERIENCE_DATA_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    yield put({ type: type.SEND_EXPERIENCE_DATA_FAILED, payload: error });\r\n  }\r\n}\r\nfunction* wacthExperienceSaga() {\r\n  yield takeEvery(type.SEND_EXPERIENCE_DATA_SAGA, addExperienceSaga);\r\n}\r\n//Delete Experience\r\nconst deleteExpData = async (token, id) => {\r\n  console.log(token);\r\n  const toDelete = await fetch(`api/profile/experience/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  })\r\n    .then(async (res) => {\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      throw e;\r\n    });\r\n  return toDelete;\r\n};\r\nfunction* deleteExperienceSaga(action) {\r\n  const { id, token } = action.payload;\r\n  try {\r\n    const res = yield deleteExpData(token, id);\r\n    yield put({ type: type.DELETE_EXPERIENCE_DATA, payload: res });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\nfunction* watchDeleteExperienceSaga() {\r\n  yield takeEvery(type.DELETE_EXPERIENCE_DATA_SAGA, deleteExperienceSaga);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchSetAlertSaga(),\r\n    watchRemoveAlert(),\r\n    watchRegisterSaga(),\r\n    watchLogInSaga(),\r\n    watchLogOutSaga(),\r\n    watchRemoveEmailAlertSaga(),\r\n    watchGetUserSaga(),\r\n    watchCreateProfileSaga(),\r\n    watchRemoveCreateProfileAlertSaga(),\r\n    watchGetProfileByIdSaga(),\r\n    watchAddEducationSaga(),\r\n    watchDeleteEducationSaga(),\r\n    watchRemoveEducationAlertSaga(),\r\n    wacthExperienceSaga(),\r\n    watchDeleteExperienceSaga(),\r\n  ]);\r\n}\r\n","C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\dashboard.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\DashboardEdits\\Education.jsx",["101"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\alert.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\index.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\auth\\Register.jsx",["102"],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\rootReducers.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\dashboard.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\reducers\\profile.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Layout\\Alert.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Utils\\FormatDate.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\education.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\redux\\actions\\experience.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\CreateProfile.jsx",[],"C:\\Users\\User\\Desktop\\social-app\\client\\src\\components\\Pages\\Credentials\\ExperienceCredentials.jsx",[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":40,"nodeType":"105","messageId":"106","endLine":1,"endColumn":47},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":39,"column":6,"nodeType":"114","endLine":39,"endColumn":8,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"116","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":21},{"ruleId":"103","severity":1,"message":"117","line":3,"column":23,"nodeType":"105","messageId":"106","endLine":3,"endColumn":34},{"ruleId":"103","severity":1,"message":"118","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":25},{"ruleId":"103","severity":1,"message":"119","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":24},{"ruleId":"103","severity":1,"message":"120","line":1,"column":31,"nodeType":"105","messageId":"106","endLine":1,"endColumn":35},{"ruleId":"103","severity":1,"message":"121","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"122","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"123","line":43,"column":6,"nodeType":"114","endLine":43,"endColumn":29,"suggestions":"124"},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'profile' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["127"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'deleteEducation' is defined but never used.","'getProfileById' is defined but never used.","'call' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [auth, dispatch, token]",{"range":"133","text":"134"},"Update the dependencies array to be: [password, conPassword, dispatch]",{"range":"135","text":"136"},[1505,1507],"[auth, dispatch, token]",[1259,1282],"[password, conPassword, dispatch]"]